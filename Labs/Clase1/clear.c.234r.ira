
;; Function clear1 (clear1, funcdef_no=0, decl_uid=2554, cgraph_uid=0, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a2(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a5(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 27(l0): point = 0
   Insn 17(l0): point = 3
   Insn 16(l0): point = 5
   Insn 15(l0): point = 7
   Insn 14(l0): point = 9
   Insn 13(l0): point = 11
   Insn 12(l0): point = 13
   Insn 11(l0): point = 15
   Insn 23(l0): point = 18
   Insn 22(l0): point = 20
   Insn 21(l0): point = 22
   Insn 28(l0): point = 25
   Insn 7(l0): point = 27
   Insn 3(l0): point = 29
   Insn 2(l0): point = 31
 a0(r92): [21..22]
 a1(r89): [6..7]
 a2(r91): [8..9]
 a3(r88): [8..11]
 a4(r87): [12..13]
 a5(r90): [14..15]
Compressing live ranges: from 34 to 10 - 29%
Ranges after the compression:
 a0(r92): [8..9]
 a1(r89): [0..1]
 a2(r91): [2..3]
 a3(r88): [2..3]
 a4(r87): [4..5]
 a5(r90): [6..7]
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    4:r87  l0     0    3:r88  l0     1    1:r89  l0     0    5:r90  l0     0
    2:r91  l0     0    0:r92  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


clear1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,1u} r20={1d,14u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 68{29d,37u,2e} in 15{15 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) clear.c:12 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ array ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) clear.c:12 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 28 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) clear.c:14 90 {*movsi_internal}
     (nil))
(jump_insn 28 7 29 2 (set (pc)
        (label_ref 18)) clear.c:14 654 {jump}
     (nil)
 -> 18)
(barrier 29 28 20)
(code_label 20 29 10 3 3 "" [1 uses])
(note 10 20 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) clear.c:15 90 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 87 [ D.2595 ])
        (sign_extend:DI (reg:SI 90))) clear.c:15 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg:DI 88 [ D.2595 ])
                (ashift:DI (reg:DI 87 [ D.2595 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) clear.c:15 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.2595 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 3 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])) clear.c:15 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:DI 89 [ D.2596 ])
                (plus:DI (reg:DI 88 [ D.2595 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) clear.c:15 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg:DI 88 [ D.2595 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])
                        (reg:DI 88 [ D.2595 ]))
                    (nil))))))
(insn 16 15 17 3 (set (mem:SI (reg/f:DI 89 [ D.2596 ]) [0 *_9+0 S4 A32])
        (const_int 0 [0])) clear.c:15 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.2596 ])
        (nil)))
(insn 17 16 18 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) clear.c:14 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 18 17 19 4 2 "" [1 uses])
(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 19 22 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) clear.c:14 90 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92)
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32]))) clear.c:14 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) clear.c:14 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 20)
(note 24 23 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 24 0 5 (const_int 0 [0]) clear.c:16 684 {nop}
     (nil))

;; Function clear2 (clear2, funcdef_no=1, decl_uid=2562, cgraph_uid=1, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a3(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8
  a6(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:8

   Insn 28(l0): point = 0
   Insn 14(l0): point = 3
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 21(l0): point = 14
   Insn 20(l0): point = 16
   Insn 19(l0): point = 18
   Insn 18(l0): point = 20
   Insn 17(l0): point = 22
   Insn 29(l0): point = 25
   Insn 8(l0): point = 27
   Insn 7(l0): point = 29
   Insn 3(l0): point = 31
   Insn 2(l0): point = 33
 a0(r89): [13..14]
 a1(r93): [15..16]
 a2(r88): [15..18]
 a3(r87): [19..20]
 a4(r92): [21..22]
 a5(r91): [6..7]
 a6(r90): [28..29]
Compressing live ranges: from 36 to 12 - 33%
Ranges after the compression:
 a0(r89): [2..3]
 a1(r93): [4..5]
 a2(r88): [4..5]
 a3(r87): [6..7]
 a4(r92): [8..9]
 a5(r91): [0..1]
 a6(r90): [10..11]
  regions=1, blocks=6, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r87  l0     0    2:r88  l0     1    0:r89  l0     0    6:r90  l0     0
    5:r91  l0     0    4:r92  l0     0    1:r93  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


clear2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={4d,1u} r20={1d,15u,1e} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 71{30d,39u,2e} in 16{16 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) clear.c:20 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ array ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) clear.c:20 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])) clear.c:22 89 {*movdi_internal}
     (nil))
(insn 8 7 29 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
        (reg/f:DI 90)) clear.c:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(jump_insn 29 8 30 2 (set (pc)
        (label_ref 15)) clear.c:22 654 {jump}
     (nil)
 -> 15)
(barrier 30 29 22)
(code_label 22 30 11 3 6 "" [1 uses])
(note 11 22 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])) clear.c:23 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (mem:SI (reg/f:DI 91) [0 *p_1+0 S4 A32])
        (const_int 0 [0])) clear.c:23 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 14 13 15 3 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) clear.c:22 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 15 14 16 4 5 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [0 size+0 S4 A32])) clear.c:22 90 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 87 [ D.2597 ])
        (sign_extend:DI (reg:SI 92))) clear.c:22 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 88 [ D.2597 ])
                (ashift:DI (reg:DI 87 [ D.2597 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) clear.c:22 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.2597 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 4 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])) clear.c:22 89 {*movdi_internal}
     (nil))
(insn 21 20 23 4 (parallel [
            (set (reg/f:DI 89 [ D.2598 ])
                (plus:DI (reg:DI 88 [ D.2597 ])
                    (reg/f:DI 93)))
            (clobber (reg:CC 17 flags))
        ]) clear.c:22 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_DEAD (reg:DI 88 [ D.2597 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -24 [0xffffffffffffffe8])) [0 array+0 S8 A64])
                        (reg:DI 88 [ D.2597 ]))
                    (nil))))))
(insn 23 21 24 4 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 89 [ D.2598 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 p+0 S8 A64]))) clear.c:22 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.2598 ])
        (nil)))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) clear.c:22 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 22)
(note 25 24 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 25 0 5 (const_int 0 [0]) clear.c:24 684 {nop}
     (nil))

;; Function clear3 (clear3, funcdef_no=2, decl_uid=2570, cgraph_uid=2, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best DREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:6
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21 NO_REX_SSE_REGS:21 SSE_REGS:21 MMX_REGS:26 INT_SSE_REGS:22 ALL_REGS:416 MEM:7
  a3(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20 NO_REX_SSE_REGS:20 SSE_REGS:20 MMX_REGS:25 INT_SSE_REGS:21 ALL_REGS:312 MEM:7

   Insn 17(l0): point = 0
   Insn 14(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r90): [5..10]
 a1(r88): [9..12]
 a2(r87): [13..14]
 a3(r89): [15..16]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [0..1]
 a2(r87): [2..3]
 a3(r89): [4..5]
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4
Disposition:
    2:r87  l0     0    1:r88  l0     1    3:r89  l0     0    0:r90  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


clear3

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 120{99d,21u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])
        (reg:DI 5 di [ array ])) clear.c:28 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ array ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])
        (reg:SI 4 si [ size ])) clear.c:28 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 size+0 S4 A32])) clear.c:29 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 87 [ D.2599 ])
        (sign_extend:DI (reg:SI 89))) clear.c:29 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 88 [ D.2599 ])
                (ashift:DI (reg:DI 87 [ D.2599 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) clear.c:29 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 87 [ D.2599 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 array+0 S8 A64])) clear.c:29 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.2599 ])) clear.c:29 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.2599 ])
        (nil)))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 0 [0])) clear.c:29 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 90)) clear.c:29 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(call_insn 14 13 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f80b1444438 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) clear.c:29 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 17 14 0 2 (const_int 0 [0]) clear.c:30 684 {nop}
     (nil))

;; Function main (main, funcdef_no=3, decl_uid=2573, cgraph_uid=3, symbol_order=4)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a2 (r95,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r94: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a5 (r94,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r93: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a8 (r93,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r92: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a0 (r92,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r91: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a1 (r91,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r90: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a3 (r90,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r89: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a4 (r89,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r88: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a6 (r88,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r87: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a7 (r87,l0) best SSE_FIRST_REG, allocno SSE_REGS

  a0(r92,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a1(r91,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:9
  a2(r95,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a3(r90,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a4(r89,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:9
  a5(r94,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7
  a6(r88,l0) costs: AREG:12 DREG:12 CREG:12 BREG:12 SIREG:12 DIREG:12 AD_REGS:12 Q_REGS:12 NON_Q_REGS:12 GENERAL_REGS:12 FP_TOP_REG:33 FP_SECOND_REG:33 FLOAT_REGS:33 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:33 FP_SECOND_SSE_REGS:33 FLOAT_SSE_REGS:33 FLOAT_INT_REGS:33 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:33 MEM:9
  a7(r87,l0) costs: AREG:13 DREG:13 CREG:13 BREG:13 SIREG:13 DIREG:13 AD_REGS:13 Q_REGS:13 NON_Q_REGS:13 GENERAL_REGS:13 FP_TOP_REG:27 FP_SECOND_REG:27 FLOAT_REGS:27 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:29 FP_SECOND_SSE_REGS:29 FLOAT_SSE_REGS:29 FLOAT_INT_REGS:27 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:29 MEM:9
  a8(r93,l0) costs: AREG:2 DREG:2 CREG:2 BREG:2 SIREG:2 DIREG:2 AD_REGS:2 Q_REGS:2 NON_Q_REGS:2 GENERAL_REGS:2 FP_TOP_REG:25 FP_SECOND_REG:25 FLOAT_REGS:25 SSE_FIRST_REG:19 NO_REX_SSE_REGS:0 SSE_REGS:0 FP_TOP_SSE_REGS:27 FP_SECOND_SSE_REGS:27 FLOAT_SSE_REGS:27 FLOAT_INT_REGS:25 INT_SSE_REGS:19 FLOAT_INT_SSE_REGS:27 MEM:7

   Insn 46(l0): point = 0
   Insn 43(l0): point = 2
   Insn 42(l0): point = 4
   Insn 41(l0): point = 6
   Insn 40(l0): point = 8
   Insn 39(l0): point = 10
   Insn 38(l0): point = 12
   Insn 37(l0): point = 14
   Insn 36(l0): point = 16
   Insn 35(l0): point = 18
   Insn 34(l0): point = 20
   Insn 33(l0): point = 22
   Insn 32(l0): point = 24
   Insn 31(l0): point = 26
   Insn 30(l0): point = 28
   Insn 29(l0): point = 30
   Insn 28(l0): point = 32
   Insn 27(l0): point = 34
   Insn 26(l0): point = 36
   Insn 25(l0): point = 38
   Insn 24(l0): point = 40
   Insn 23(l0): point = 42
   Insn 22(l0): point = 44
   Insn 21(l0): point = 46
   Insn 20(l0): point = 48
   Insn 19(l0): point = 50
   Insn 18(l0): point = 52
   Insn 17(l0): point = 54
   Insn 16(l0): point = 56
   Insn 15(l0): point = 58
   Insn 14(l0): point = 60
   Insn 13(l0): point = 62
   Insn 12(l0): point = 64
   Insn 11(l0): point = 66
   Insn 10(l0): point = 68
   Insn 9(l0): point = 70
   Insn 8(l0): point = 72
   Insn 7(l0): point = 74
   Insn 6(l0): point = 76
   Insn 5(l0): point = 78
 a0(r92): [9..10]
 a1(r91): [11..12]
 a2(r95): [23..24]
 a3(r90): [35..36]
 a4(r89): [37..38]
 a5(r94): [49..50]
 a6(r88): [61..62]
 a7(r87): [63..64]
 a8(r93): [75..76]
Compressing live ranges: from 81 to 18 - 22%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r91): [2..3]
 a2(r95): [4..5]
 a3(r90): [6..7]
 a4(r89): [8..9]
 a5(r94): [10..11]
 a6(r88): [12..13]
 a7(r87): [14..15]
 a8(r93): [16..17]
  pref0:a2(r95)<-hr21@1
  pref1:a5(r94)<-hr21@1
  pref2:a8(r93)<-hr21@1
  regions=1, blocks=3, points=18
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    7:r87  l0    21    6:r88  l0    21    4:r89  l0    21    3:r90  l0    21
    1:r91  l0    21    0:r92  l0    21    8:r93  l0     0    5:r94  l0     0
    2:r95  l0     0
+++Costs: overall -9, reg -9, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 21[xmm0]
;;  ref usage 	r0={16d,3u} r1={13d} r2={13d} r4={16d,3u} r5={19d,6u} r6={1d,2u} r7={1d,14u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,1u} r17={12d} r18={12d} r19={12d} r20={1d,8u} r21={16d,9u} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 962{907d,55u,0e} in 40{28 regular + 12 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:35 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 6 5 7 2 (set (reg:DF 93)
        (reg:DF 21 xmm0)) clear.c:35 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 7 6 8 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg:DF 93)) clear.c:35 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 93)
        (nil)))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 134217728 [0x8000000])) clear.c:36 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("a") [flags 0x2]  <var_decl 0x7f80b13cbd80 a>)) clear.c:36 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("clear1") [flags 0x3]  <function_decl 0x7f80b1546798 clear1>) [0 clear1 S1 A8])
        (const_int 0 [0])) clear.c:36 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 11 10 12 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:37 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 12 11 13 2 (set (reg:DF 87 [ D.2600 ])
        (reg:DF 21 xmm0)) clear.c:37 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 13 12 14 2 (set (reg:DF 88 [ D.2600 ])
        (minus:DF (reg:DF 87 [ D.2600 ])
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64]))) clear.c:37 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 87 [ D.2600 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DF 21 xmm0)
        (reg:DF 88 [ D.2600 ])) clear.c:37 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 88 [ D.2600 ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f80b155dea0 *.LC0>)) clear.c:37 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) clear.c:37 93 {*movqi_internal}
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f80b144dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) clear.c:37 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(call_insn 18 17 19 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:38 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 19 18 20 2 (set (reg:DF 94)
        (reg:DF 21 xmm0)) clear.c:38 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 20 19 21 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg:DF 94)) clear.c:38 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 94)
        (nil)))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (const_int 134217728 [0x8000000])) clear.c:39 90 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("a") [flags 0x2]  <var_decl 0x7f80b13cbd80 a>)) clear.c:39 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:DI ("clear2") [flags 0x3]  <function_decl 0x7f80b1546870 clear2>) [0 clear2 S1 A8])
        (const_int 0 [0])) clear.c:39 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 24 23 25 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:40 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 25 24 26 2 (set (reg:DF 89 [ D.2600 ])
        (reg:DF 21 xmm0)) clear.c:40 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 26 25 27 2 (set (reg:DF 90 [ D.2600 ])
        (minus:DF (reg:DF 89 [ D.2600 ])
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64]))) clear.c:40 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 89 [ D.2600 ])
        (nil)))
(insn 27 26 28 2 (set (reg:DF 21 xmm0)
        (reg:DF 90 [ D.2600 ])) clear.c:40 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 90 [ D.2600 ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f80b155df30 *.LC1>)) clear.c:40 89 {*movdi_internal}
     (nil))
(insn 29 28 30 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) clear.c:40 93 {*movqi_internal}
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f80b144dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) clear.c:40 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(call_insn 31 30 32 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:41 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 32 31 33 2 (set (reg:DF 95)
        (reg:DF 21 xmm0)) clear.c:41 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 33 32 34 2 (set (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64])
        (reg:DF 95)) clear.c:41 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 95)
        (nil)))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (const_int 134217728 [0x8000000])) clear.c:42 90 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("a") [flags 0x2]  <var_decl 0x7f80b13cbd80 a>)) clear.c:42 89 {*movdi_internal}
     (nil))
(call_insn 36 35 37 2 (call (mem:QI (symbol_ref:DI ("clear3") [flags 0x3]  <function_decl 0x7f80b1546948 clear3>) [0 clear3 S1 A8])
        (const_int 0 [0])) clear.c:42 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 37 36 38 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("omp_get_wtime") [flags 0x41]  <function_decl 0x7f80b14f5360 omp_get_wtime>) [0 omp_get_wtime S1 A8])
            (const_int 0 [0]))) clear.c:43 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 38 37 39 2 (set (reg:DF 91 [ D.2600 ])
        (reg:DF 21 xmm0)) clear.c:43 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 39 38 40 2 (set (reg:DF 92 [ D.2600 ])
        (minus:DF (reg:DF 91 [ D.2600 ])
            (mem/c:DF (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 t+0 S8 A64]))) clear.c:43 805 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 91 [ D.2600 ])
        (nil)))
(insn 40 39 41 2 (set (reg:DF 21 xmm0)
        (reg:DF 92 [ D.2600 ])) clear.c:43 128 {*movdf_internal}
     (expr_list:REG_DEAD (reg:DF 92 [ D.2600 ])
        (nil)))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f80b1565000 *.LC2>)) clear.c:43 89 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) clear.c:43 93 {*movqi_internal}
     (nil))
(call_insn 43 42 46 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f80b144dca8 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) clear.c:43 669 {*call_value}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DF (use (reg:DF 21 xmm0))
                (nil)))))
(insn 46 43 0 2 (const_int 0 [0]) clear.c:44 684 {nop}
     (nil))
